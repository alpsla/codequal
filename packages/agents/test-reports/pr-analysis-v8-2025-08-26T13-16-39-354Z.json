{
  "repositoryUrl": "https://github.com/sindresorhus/ky",
  "prNumber": 700,
  "mainBranchIssues": [
    {
      "id": "issue-1",
      "title": "Missing validation for user input in request handlers, which can lead to injection attacks.",
      "description": "Missing validation for user input in request handlers, which can lead to injection attacks.",
      "severity": "critical",
      "category": "security",
      "location": {
        "file": "test/headers.ts",
        "line": 42
      },
      "file": "test/headers.ts",
      "line": 48,
      "codeSnippet": "test('`user-agent`', async t => {",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-2",
      "title": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
      "description": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
      "severity": "high",
      "category": "code-quality",
      "location": {
        "file": "test/hooks.ts",
        "line": 3
      },
      "file": "test/hooks.ts",
      "line": 20,
      "codeSnippet": "import ky, {HTTPError} from '../source/index.js';",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-3",
      "title": "Potential denial of service due to unbounded retries on network errors.",
      "description": "Potential denial of service due to unbounded retries on network errors.",
      "severity": "high",
      "category": "performance",
      "location": {
        "file": "test/retry.ts",
        "line": 285
      },
      "file": "test/retry.ts",
      "line": 5,
      "codeSnippet": "test('respect number of retries', async t => {",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-4",
      "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "description": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "severity": "medium",
      "category": "performance",
      "location": {
        "file": "test/main.ts",
        "line": 5
      },
      "file": "test/main.ts",
      "line": 40,
      "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-5",
      "title": "Inconsistent use of HTTP methods in tests may lead to false positives/negatives.",
      "description": "Inconsistent use of HTTP methods in tests may lead to false positives/negatives.",
      "severity": "medium",
      "category": "testing",
      "location": {
        "file": "test/main.ts",
        "line": 6
      },
      "file": "test/main.ts",
      "line": 10,
      "codeSnippet": "import {createHttpTestServer} from './helpers/create-http-test-server.js';",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-6",
      "title": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
      "description": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
      "severity": "medium",
      "category": "code-quality",
      "location": {
        "file": "test/main.ts",
        "line": 13
      },
      "file": "test/main.ts",
      "line": 90,
      "codeSnippet": "\tserver.get('/', (_request, response) => {",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-7",
      "title": "Lack of proper response validation for different content types can lead to application crashes.",
      "description": "Lack of proper response validation for different content types can lead to application crashes.",
      "severity": "medium",
      "category": "security",
      "location": {
        "file": "test/headers.ts",
        "line": 11
      },
      "file": "test/headers.ts",
      "line": 60,
      "codeSnippet": "const echoHeaders: RequestHandler = (request, response) => {",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-8",
      "title": "Potential memory leak due to unclosed HTTP connections in tests.",
      "description": "Potential memory leak due to unclosed HTTP connections in tests.",
      "severity": "medium",
      "category": "performance",
      "location": {
        "file": "test/retry.ts",
        "line": 3
      },
      "file": "test/retry.ts",
      "line": 25,
      "codeSnippet": "import {createHttpTestServer} from './helpers/create-http-test-server.js';",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-9",
      "title": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
      "description": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
      "severity": "high",
      "category": "performance",
      "location": {
        "file": "source/core/constants.ts",
        "line": 59
      },
      "file": "source/core/constants.ts",
      "line": 12,
      "codeSnippet": "export const maxSafeTimeout = 2_147_483_647;",
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-10",
      "title": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
      "description": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
      "severity": "low",
      "category": "code-quality",
      "location": {
        "file": "test/hooks.ts",
        "line": 485
      },
      "file": "test/hooks.ts",
      "line": 15,
      "codeSnippet": "\t\t\t\t\t\tt.is(error.message, `Request failed with status code 502 Bad Gateway: GET ${server.url}/`);",
      "locationMethod": "file-search",
      "locationConfidence": 70
    }
  ],
  "prBranchIssues": [
    {
      "id": "issue-unchanged-1",
      "title": "Missing validation for user input in request handlers, which can lead to injection attacks.",
      "description": "Missing validation for user input in request handlers, which can lead to injection attacks.",
      "severity": "critical",
      "category": "security",
      "location": {
        "file": "test/headers.ts",
        "line": 42
      },
      "file": "test/headers.ts",
      "line": 42,
      "codeSnippet": "test('`user-agent`', async t => {",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-2",
      "title": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
      "description": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
      "severity": "high",
      "category": "code-quality",
      "location": {
        "file": "test/hooks.ts",
        "line": 3
      },
      "file": "test/hooks.ts",
      "line": 3,
      "codeSnippet": "import ky, {HTTPError} from '../source/index.js';",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-3",
      "title": "Potential denial of service due to unbounded retries on network errors.",
      "description": "Potential denial of service due to unbounded retries on network errors.",
      "severity": "high",
      "category": "performance",
      "location": {
        "file": "test/retry.ts",
        "line": 285
      },
      "file": "test/retry.ts",
      "line": 285,
      "codeSnippet": "test('respect number of retries', async t => {",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-4",
      "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "description": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "severity": "medium",
      "category": "performance",
      "location": {
        "file": "test/main.ts",
        "line": 5
      },
      "file": "test/main.ts",
      "line": 5,
      "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-5",
      "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "description": "Inconsistent use of HTTP methods in tests may lead to false positives/negatives.",
      "severity": "medium",
      "category": "testing",
      "location": {
        "file": "test/main.ts",
        "line": 5
      },
      "file": "test/main.ts",
      "line": 6,
      "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-6",
      "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
      "description": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
      "severity": "medium",
      "category": "code-quality",
      "location": {
        "file": "test/main.ts",
        "line": 5
      },
      "file": "test/main.ts",
      "line": 13,
      "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-7",
      "title": "Lack of proper response validation for different content types can lead to application crashes.",
      "description": "Lack of proper response validation for different content types can lead to application crashes.",
      "severity": "medium",
      "category": "security",
      "location": {
        "file": "test/headers.ts",
        "line": 11
      },
      "file": "test/headers.ts",
      "line": 11,
      "codeSnippet": "const echoHeaders: RequestHandler = (request, response) => {",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-8",
      "title": "Potential memory leak due to unclosed HTTP connections in tests.",
      "description": "Potential memory leak due to unclosed HTTP connections in tests.",
      "severity": "medium",
      "category": "performance",
      "location": {
        "file": "test/retry.ts",
        "line": 3
      },
      "file": "test/retry.ts",
      "line": 3,
      "codeSnippet": "import {createHttpTestServer} from './helpers/create-http-test-server.js';",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-9",
      "title": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
      "description": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
      "severity": "high",
      "category": "performance",
      "location": {
        "file": "source/core/constants.ts",
        "line": 59
      },
      "file": "source/core/constants.ts",
      "line": 59,
      "codeSnippet": "export const maxSafeTimeout = 2_147_483_647;",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    },
    {
      "id": "issue-unchanged-10",
      "title": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
      "description": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
      "severity": "low",
      "category": "code-quality",
      "location": {
        "file": "test/hooks.ts",
        "line": 485
      },
      "file": "test/hooks.ts",
      "line": 485,
      "codeSnippet": "\t\t\t\t\t\tt.is(error.message, `Request failed with status code 502 Bad Gateway: GET ${server.url}/`);",
      "status": "unchanged",
      "originalFromMain": true,
      "locationMethod": "file-search",
      "locationConfidence": 70
    }
  ],
  "categorized": {
    "newIssues": [],
    "fixedIssues": [
      {
        "issue": {
          "id": "issue-6",
          "title": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
          "description": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
          "severity": "medium",
          "category": "code-quality",
          "location": {
            "file": "test/main.ts",
            "line": 13
          },
          "file": "test/main.ts",
          "line": 90,
          "codeSnippet": "\tserver.get('/', (_request, response) => {",
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "fixed",
        "fingerprint": "test/main.ts:10:code-quality:medium:handling:get-get",
        "confidence": 0.41000000000000003
      }
    ],
    "unchangedIssues": [
      {
        "issue": {
          "id": "issue-unchanged-1",
          "title": "Missing validation for user input in request handlers, which can lead to injection attacks.",
          "description": "Missing validation for user input in request handlers, which can lead to injection attacks.",
          "severity": "critical",
          "category": "security",
          "location": {
            "file": "test/headers.ts",
            "line": 42
          },
          "file": "test/headers.ts",
          "line": 42,
          "codeSnippet": "test('`user-agent`', async t => {",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/headers.ts:40:security:critical:injection-input-validation:async-test",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-2",
          "title": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
          "description": "Lack of error handling for asynchronous operations, which may lead to unhandled promise rejections.",
          "severity": "high",
          "category": "code-quality",
          "location": {
            "file": "test/hooks.ts",
            "line": 3
          },
          "file": "test/hooks.ts",
          "line": 3,
          "codeSnippet": "import ky, {HTTPError} from '../source/index.js';",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/hooks.ts:0:code-quality:high:asynchronous-error-handling-promise:js",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-3",
          "title": "Potential denial of service due to unbounded retries on network errors.",
          "description": "Potential denial of service due to unbounded retries on network errors.",
          "severity": "high",
          "category": "performance",
          "location": {
            "file": "test/retry.ts",
            "line": 285
          },
          "file": "test/retry.ts",
          "line": 285,
          "codeSnippet": "test('respect number of retries', async t => {",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/retry.ts:280:performance:high:denial-errors.:async-test",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-4",
          "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
          "description": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
          "severity": "medium",
          "category": "performance",
          "location": {
            "file": "test/main.ts",
            "line": 5
          },
          "file": "test/main.ts",
          "line": 5,
          "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/main.ts:0:performance:medium:timeout:js",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-5",
          "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
          "description": "Inconsistent use of HTTP methods in tests may lead to false positives/negatives.",
          "severity": "medium",
          "category": "testing",
          "location": {
            "file": "test/main.ts",
            "line": 5
          },
          "file": "test/main.ts",
          "line": 6,
          "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/main.ts:0:testing:medium:tests:js",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-6",
          "title": "Hardcoded timeout values may lead to inconsistent behavior across different environments.",
          "description": "Missing handling for response body when status code is 204, which can lead to incorrect assumptions about the response.",
          "severity": "medium",
          "category": "code-quality",
          "location": {
            "file": "test/main.ts",
            "line": 5
          },
          "file": "test/main.ts",
          "line": 13,
          "codeSnippet": "import ky, {TimeoutError} from '../source/index.js';",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/main.ts:0:code-quality:medium:handling:js",
        "confidence": 0.85
      },
      {
        "issue": {
          "id": "issue-unchanged-7",
          "title": "Lack of proper response validation for different content types can lead to application crashes.",
          "description": "Lack of proper response validation for different content types can lead to application crashes.",
          "severity": "medium",
          "category": "security",
          "location": {
            "file": "test/headers.ts",
            "line": 11
          },
          "file": "test/headers.ts",
          "line": 11,
          "codeSnippet": "const echoHeaders: RequestHandler = (request, response) => {",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/headers.ts:10:security:medium:types-validation:",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-8",
          "title": "Potential memory leak due to unclosed HTTP connections in tests.",
          "description": "Potential memory leak due to unclosed HTTP connections in tests.",
          "severity": "medium",
          "category": "performance",
          "location": {
            "file": "test/retry.ts",
            "line": 3
          },
          "file": "test/retry.ts",
          "line": 3,
          "codeSnippet": "import {createHttpTestServer} from './helpers/create-http-test-server.js';",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/retry.ts:0:performance:medium:leak-memory-tests.:js",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-9",
          "title": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
          "description": "Missing timeout for requests can lead to indefinite hanging in case of network issues.",
          "severity": "high",
          "category": "performance",
          "location": {
            "file": "source/core/constants.ts",
            "line": 59
          },
          "file": "source/core/constants.ts",
          "line": 59,
          "codeSnippet": "export const maxSafeTimeout = 2_147_483_647;",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "source/core/constants.ts:50:performance:high:timeout:",
        "confidence": 1
      },
      {
        "issue": {
          "id": "issue-unchanged-10",
          "title": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
          "description": "Insufficient logging for failed requests, making it difficult to diagnose issues.",
          "severity": "low",
          "category": "code-quality",
          "location": {
            "file": "test/hooks.ts",
            "line": 485
          },
          "file": "test/hooks.ts",
          "line": 485,
          "codeSnippet": "\t\t\t\t\t\tt.is(error.message, `Request failed with status code 502 Bad Gateway: GET ${server.url}/`);",
          "status": "unchanged",
          "originalFromMain": true,
          "locationMethod": "file-search",
          "locationConfidence": 70
        },
        "category": "unchanged",
        "fingerprint": "test/hooks.ts:480:code-quality:low:generic:is-is-message",
        "confidence": 1
      }
    ],
    "summary": {
      "totalNew": 0,
      "totalFixed": 1,
      "totalUnchanged": 10,
      "netImpact": -1,
      "prQualityScore": 55
    },
    "recommendations": [
      "✅ Great work! This PR fixes 1 existing issue(s)",
      "📈 Net improvement: 1 fewer issues after this PR",
      "⚠️ PR needs attention. Please address the issues above."
    ]
  },
  "metadata": {
    "analysisDate": "2025-08-26T13:16:38.810Z",
    "mainBranchAnalysisDuration": 20.6,
    "prBranchAnalysisDuration": 17.6,
    "totalDuration": 38.2,
    "modelUsed": "dynamic-selection",
    "iterationsPerBranch": 3,
    "tokensUsed": 0
  }
}