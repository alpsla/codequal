#!/usr/bin/env npx ts-node

import * as fs from 'fs';

// Read the latest markdown report
const latestReport = fs.readFileSync('test-outputs/enhanced-report-2025-08-13T21-41-28-323Z.md', 'utf-8');

// Professional HTML template with modern styling
const htmlTemplate = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CodeQual PR Analysis Report</title>
    <style>
        :root {
            --primary: #0066cc;
            --danger: #dc3545;
            --warning: #ffc107;
            --success: #28a745;
            --info: #17a2b8;
            --dark: #2d3748;
            --light: #f8f9fa;
            --border: #e2e8f0;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--dark);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            padding: 3rem;
        }
        
        h1 {
            color: var(--primary);
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 3px solid var(--primary);
        }
        
        h2 {
            color: var(--dark);
            margin: 2rem 0 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--border);
        }
        
        h3 {
            color: var(--dark);
            margin: 1.5rem 0 1rem;
        }
        
        h4 {
            color: var(--dark);
            margin: 1rem 0 0.5rem;
        }
        
        .decision-box {
            background: var(--light);
            border-left: 5px solid var(--danger);
            padding: 1.5rem;
            margin: 2rem 0;
            border-radius: 8px;
        }
        
        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }
        
        .metric-card {
            background: var(--light);
            padding: 1.5rem;
            border-radius: 8px;
            text-align: center;
            border: 1px solid var(--border);
        }
        
        pre {
            background: #1e1e1e;
            color: #d4d4d4;
            padding: 1rem;
            border-radius: 8px;
            overflow-x: auto;
            margin: 1rem 0;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
        }
        
        code {
            background: var(--light);
            padding: 0.2rem 0.4rem;
            border-radius: 3px;
            font-family: monospace;
        }
        
        ul, ol {
            margin: 1rem 0 1rem 2rem;
        }
        
        li {
            margin: 0.5rem 0;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 1rem 0;
        }
        
        th, td {
            padding: 0.75rem;
            text-align: left;
            border: 1px solid var(--border);
        }
        
        th {
            background: var(--light);
            font-weight: 600;
        }
        
        strong {
            color: var(--dark);
            font-weight: 600;
        }
        
        .critical { color: var(--danger); font-weight: bold; }
        .high { color: var(--warning); font-weight: bold; }
        .medium { color: var(--info); font-weight: bold; }
        .low { color: var(--success); font-weight: bold; }
        
        .file-location {
            background: var(--light);
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-family: monospace;
            font-size: 0.9rem;
            color: var(--primary);
            display: inline-block;
            margin: 0.25rem 0;
        }
        
        .footer {
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid var(--border);
            text-align: center;
            color: #718096;
        }
        
        hr {
            border: none;
            border-top: 2px solid var(--border);
            margin: 2rem 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="content">
`;

const htmlFooter = `
        </div>
        <div class="footer">
            <p>Generated by CodeQual AI Analysis Platform</p>
            <p>Report Version: ReportGeneratorV7Fixed with All Enhancements</p>
            <p>Date: ${new Date().toISOString()}</p>
        </div>
    </div>
</body>
</html>`;

// Simple markdown to HTML conversion
function convertMarkdown(md: string): string {
    return md
        // Headers
        .replace(/^#### (.+)$/gm, '<h4>$1</h4>')
        .replace(/^### (.+)$/gm, '<h3>$1</h3>')
        .replace(/^## (.+)$/gm, '<h2>$1</h2>')
        .replace(/^# (.+)$/gm, '<h1>$1</h1>')
        // Bold
        .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
        // Code blocks
        .replace(/```typescript\n([\s\S]*?)```/g, '<pre><code>$1</code></pre>')
        .replace(/```\n([\s\S]*?)```/g, '<pre>$1</pre>')
        // Inline code
        .replace(/`([^`]+)`/g, '<code>$1</code>')
        // Lists
        .replace(/^\- (.+)$/gm, '<li>$1</li>')
        .replace(/(<li>.*<\/li>\n)+/g, '<ul>$&</ul>')
        // Line breaks
        .replace(/\n\n/g, '</p><p>')
        // Severity badges
        .replace(/üî¥/g, '<span class="critical">üî¥</span>')
        .replace(/üü†/g, '<span class="high">üü†</span>')
        .replace(/üü°/g, '<span class="medium">üü°</span>')
        .replace(/üü¢/g, '<span class="low">üü¢</span>')
        // File locations
        .replace(/\*\*File:\*\* ([^\n]+)/g, '<div class="file-location">üìç $1</div>')
        // Horizontal rules
        .replace(/^---$/gm, '<hr>');
}

// Convert markdown to HTML
const htmlContent = convertMarkdown(latestReport);
const fullHtml = htmlTemplate + htmlContent + htmlFooter;

// Save HTML version
const htmlPath = 'test-outputs/enhanced-report-2025-08-13T21-41-28-323Z.html';
fs.writeFileSync(htmlPath, fullHtml);

console.log('‚úÖ Reports ready for review:\n');
console.log('üìÑ Markdown version: test-outputs/enhanced-report-2025-08-13T21-41-28-323Z.md');
console.log('üåê HTML version: test-outputs/enhanced-report-2025-08-13T21-41-28-323Z.html');
console.log('\nTo open in browser:');
console.log('open test-outputs/enhanced-report-2025-08-13T21-41-28-323Z.html');