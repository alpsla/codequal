{
  "timestamp": "2025-08-13T04:20:42.206Z",
  "validationResult": {
    "success": false,
    "action": "BLOCK_COMMIT",
    "coreTestsPassed": false,
    "featureTestsPassed": false,
    "criticalFailureCount": 5,
    "executionTime": 89.15079199999946,
    "failureDetails": [
      "React Large JavaScript: result.metadata.modelUsed.includes is not a function",
      "VS Code TypeScript: result.metadata.modelUsed.includes is not a function",
      "Requests Python Library: result.metadata.modelUsed.includes is not a function",
      "Gin Go Framework: result.metadata.modelUsed.includes is not a function",
      "Ky Small TypeScript Library: result.metadata.modelUsed.includes is not a function"
    ],
    "recommendedActions": [
      "üö® CRITICAL: Fix core functionality failures immediately",
      "üîß Run: npm run test:regression:fix",
      "‚ö†Ô∏è Do not proceed with deployment until fixed"
    ]
  },
  "suiteResults": {
    "timestamp": "2025-08-13T04:20:42.205Z",
    "totalTests": 5,
    "passed": 0,
    "failed": 5,
    "criticalFailures": 5,
    "overallPassed": false,
    "results": [
      {
        "testName": "React Large JavaScript",
        "passed": false,
        "executionTime": 0,
        "coreFeatureResults": {
          "dynamic-model-selection": false,
          "scoring-system-integrity": false,
          "report-generator-v7": false,
          "researcher-functionality": false,
          "positive-points-system": false,
          "educational-insights-sync": false
        },
        "issues": {
          "found": 0,
          "withLocations": 0,
          "criticalSeverity": 0,
          "newIssues": 0,
          "resolvedIssues": 0
        },
        "modelSelection": {
          "provider": "unknown",
          "model": "unknown",
          "freshnessScore": 0,
          "contextMatch": false
        },
        "reportValidation": {
          "hasScoringBreakdown": false,
          "usesNewScoring": false,
          "hasEducationalInsights": false,
          "educationSynced": false,
          "hasLineNumbers": false
        },
        "performance": {
          "modelSelectionTime": 0,
          "analysisTime": 0,
          "reportGenerationTime": 0,
          "totalTime": 0
        },
        "errors": [
          "result.metadata.modelUsed.includes is not a function"
        ]
      },
      {
        "testName": "VS Code TypeScript",
        "passed": false,
        "executionTime": 0,
        "coreFeatureResults": {
          "dynamic-model-selection": false,
          "scoring-system-integrity": false,
          "report-generator-v7": false,
          "researcher-functionality": false,
          "positive-points-system": false,
          "educational-insights-sync": false
        },
        "issues": {
          "found": 0,
          "withLocations": 0,
          "criticalSeverity": 0,
          "newIssues": 0,
          "resolvedIssues": 0
        },
        "modelSelection": {
          "provider": "unknown",
          "model": "unknown",
          "freshnessScore": 0,
          "contextMatch": false
        },
        "reportValidation": {
          "hasScoringBreakdown": false,
          "usesNewScoring": false,
          "hasEducationalInsights": false,
          "educationSynced": false,
          "hasLineNumbers": false
        },
        "performance": {
          "modelSelectionTime": 0,
          "analysisTime": 0,
          "reportGenerationTime": 0,
          "totalTime": 0
        },
        "errors": [
          "result.metadata.modelUsed.includes is not a function"
        ]
      },
      {
        "testName": "Requests Python Library",
        "passed": false,
        "executionTime": 0,
        "coreFeatureResults": {
          "dynamic-model-selection": false,
          "scoring-system-integrity": false,
          "report-generator-v7": false,
          "researcher-functionality": false,
          "positive-points-system": false,
          "educational-insights-sync": false
        },
        "issues": {
          "found": 0,
          "withLocations": 0,
          "criticalSeverity": 0,
          "newIssues": 0,
          "resolvedIssues": 0
        },
        "modelSelection": {
          "provider": "unknown",
          "model": "unknown",
          "freshnessScore": 0,
          "contextMatch": false
        },
        "reportValidation": {
          "hasScoringBreakdown": false,
          "usesNewScoring": false,
          "hasEducationalInsights": false,
          "educationSynced": false,
          "hasLineNumbers": false
        },
        "performance": {
          "modelSelectionTime": 0,
          "analysisTime": 0,
          "reportGenerationTime": 0,
          "totalTime": 0
        },
        "errors": [
          "result.metadata.modelUsed.includes is not a function"
        ]
      },
      {
        "testName": "Gin Go Framework",
        "passed": false,
        "executionTime": 0,
        "coreFeatureResults": {
          "dynamic-model-selection": false,
          "scoring-system-integrity": false,
          "report-generator-v7": false,
          "researcher-functionality": false,
          "positive-points-system": false,
          "educational-insights-sync": false
        },
        "issues": {
          "found": 0,
          "withLocations": 0,
          "criticalSeverity": 0,
          "newIssues": 0,
          "resolvedIssues": 0
        },
        "modelSelection": {
          "provider": "unknown",
          "model": "unknown",
          "freshnessScore": 0,
          "contextMatch": false
        },
        "reportValidation": {
          "hasScoringBreakdown": false,
          "usesNewScoring": false,
          "hasEducationalInsights": false,
          "educationSynced": false,
          "hasLineNumbers": false
        },
        "performance": {
          "modelSelectionTime": 0,
          "analysisTime": 0,
          "reportGenerationTime": 0,
          "totalTime": 0
        },
        "errors": [
          "result.metadata.modelUsed.includes is not a function"
        ]
      },
      {
        "testName": "Ky Small TypeScript Library",
        "passed": false,
        "executionTime": 0,
        "coreFeatureResults": {
          "dynamic-model-selection": false,
          "scoring-system-integrity": false,
          "report-generator-v7": false,
          "researcher-functionality": false,
          "positive-points-system": false,
          "educational-insights-sync": false
        },
        "issues": {
          "found": 0,
          "withLocations": 0,
          "criticalSeverity": 0,
          "newIssues": 0,
          "resolvedIssues": 0
        },
        "modelSelection": {
          "provider": "unknown",
          "model": "unknown",
          "freshnessScore": 0,
          "contextMatch": false
        },
        "reportValidation": {
          "hasScoringBreakdown": false,
          "usesNewScoring": false,
          "hasEducationalInsights": false,
          "educationSynced": false,
          "hasLineNumbers": false
        },
        "performance": {
          "modelSelectionTime": 0,
          "analysisTime": 0,
          "reportGenerationTime": 0,
          "totalTime": 0
        },
        "errors": [
          "result.metadata.modelUsed.includes is not a function"
        ]
      }
    ],
    "systemState": {
      "version": "1.2.2",
      "lastSession": "2025-08-12",
      "features": {
        "dynamicModelSelection": {
          "status": "working",
          "confidence": 95,
          "lastTested": "2025-08-12",
          "notes": "Fully implemented with OpenRouter integration, zero hardcoded models"
        },
        "contextAwareModelRetrieval": {
          "status": "working",
          "confidence": 92,
          "lastTested": "2025-08-12",
          "notes": "Language and repository size-based model selection working"
        },
        "ultraStrictFreshnessScoring": {
          "status": "working",
          "confidence": 90,
          "lastTested": "2025-08-12",
          "notes": "6-month cutoff implemented, models older than 6 months score 0/10"
        },
        "supabaseModelStorage": {
          "status": "working",
          "confidence": 88,
          "lastTested": "2025-08-12",
          "notes": "~198 configurations generated and stored successfully"
        },
        "comparisonAgent": {
          "status": "working",
          "confidence": 90,
          "lastTested": "2025-08-12",
          "notes": "Migrated to dynamic model selection, no hardcoded models"
        },
        "researcherService": {
          "status": "working",
          "confidence": 88,
          "lastTested": "2025-08-12",
          "notes": "Context-aware research with dynamic model selection"
        },
        "deepWikiIntegration": {
          "status": "working",
          "confidence": 90,
          "lastTested": "2025-08-12",
          "notes": "DeepWiki model selector updated, async import patterns fixed"
        },
        "translatorService": {
          "status": "working",
          "confidence": 82,
          "lastTested": "2025-08-12",
          "notes": "Updated to use dynamic model configuration"
        },
        "aiLocationFinder": {
          "status": "working",
          "confidence": 90,
          "lastTested": "2025-08-12",
          "notes": "Model configuration documentation updated"
        },
        "buildSystem": {
          "status": "working",
          "confidence": 95,
          "lastTested": "2025-08-12",
          "notes": "All TypeScript compilation passing, ESLint errors resolved"
        },
        "codeQuality": {
          "status": "working",
          "confidence": 92,
          "lastTested": "2025-08-12",
          "notes": "Zero ESLint errors, modern async/await patterns implemented"
        }
      },
      "bugs": [
        {
          "id": "BUG-003",
          "severity": "LOW",
          "description": "Console statement warnings in research and scheduler files (202 warnings)",
          "discovered": "2025-08-12",
          "component": "logging"
        },
        {
          "id": "BUG-004",
          "severity": "LOW",
          "description": "8 test failures related to missing DeepWiki dependencies",
          "discovered": "2025-08-12",
          "component": "testing"
        },
        {
          "id": "BUG-010",
          "severity": "HIGH",
          "description": "Missing positive points system - resolved issues should add +5/+3/+1/+0.5 points",
          "discovered": "2025-08-12",
          "component": "scoring"
        },
        {
          "id": "BUG-011",
          "severity": "HIGH",
          "description": "\"Found 0 Code Quality Issues\" reports are suspicious - need to verify DeepWiki integration",
          "discovered": "2025-08-12",
          "component": "deepwiki"
        },
        {
          "id": "BUG-012",
          "severity": "MEDIUM",
          "description": "Base score storage not working - multiple runs against same user/PR show \"New User Base\"",
          "discovered": "2025-08-12",
          "component": "database"
        },
        {
          "id": "BUG-013",
          "severity": "HIGH",
          "description": "Score Impact Breakdown shows old scoring (-20/-10/-5/-2) instead of new system (-5/-3/-1/-0.5)",
          "discovered": "2025-08-12",
          "component": "report-generator"
        },
        {
          "id": "BUG-014",
          "severity": "MEDIUM",
          "description": "Skills by category table shows inconsistent scoring with hardcoded -10/-20 instead of new calculated values",
          "discovered": "2025-08-12",
          "component": "report-generator"
        },
        {
          "id": "BUG-015",
          "severity": "MEDIUM",
          "description": "Educational insights section not syncing with actual found issues - shows generic advice instead of specific guidance",
          "discovered": "2025-08-12",
          "component": "educational-agent"
        },
        {
          "id": "BUG-016",
          "severity": "HIGH",
          "description": "Missing permanent regression test suite - features have been re-implemented 3-4 times due to lack of proper test coverage and validation infrastructure",
          "discovered": "2025-08-12",
          "component": "testing-infrastructure"
        },
        {
          "id": "BUG-017",
          "severity": "HIGH",
          "description": "Critical regression test suite implementation required - comprehensive testing against multiple real PRs from different repositories and languages, integrated with dev-cycle-orchestrator for pre-commit validation and automated rollback",
          "discovered": "2025-08-12",
          "component": "testing-infrastructure"
        },
        {
          "id": "BUG-018",
          "severity": "MEDIUM",
          "description": "Outdated model name appearing in comparison reports - hardcoded fallbacks not syncing with ModelVersionSync database",
          "discovered": "2025-08-13",
          "component": "report-generator"
        },
        {
          "id": "BUG-019",
          "severity": "HIGH",
          "description": "Manual PR validation times out on large repositories - DeepWiki analysis exceeds timeout limits for repos like angular/angular, tensorflow, kubernetes",
          "discovered": "2025-08-13",
          "component": "manual-pr-validator"
        }
      ],
      "nextTasks": [
        "FIX BUG-019: Implement timeout handling and large repository optimization for manual PR validation",
        "FIX BUG-018: Fix model name display in reports - sync with ModelVersionSync database instead of hardcoded fallbacks",
        "FIX BUG-017: Implement comprehensive regression test suite with multi-language validation against real PRs",
        "FIX BUG-016: Establish comprehensive regression test suite with immutable validation infrastructure",
        "FIX BUG-010: Implement positive points system (+5/+3/+1/+0.5 for resolved issues)",
        "FIX BUG-011: Verify DeepWiki integration for \"Found 0 Code Quality Issues\" reports",
        "FIX BUG-012: Fix base score storage to persist user scores across runs",
        "FIX BUG-013: Update Score Impact Breakdown to use new scoring system (-5/-3/-1/-0.5)",
        "FIX BUG-014: Update Skills by category table with correct calculated scoring",
        "FIX BUG-015: Sync educational insights with actual found issues",
        "Fix DeepWiki client dependencies for test completion",
        "Address TypeScript interface mismatches in educational agent",
        "Integrate educational agent with dynamic model selection",
        "Add line numbers to comparison report generation",
        "Clean up console statement warnings in logging"
      ],
      "architecture": {
        "modelSelection": "fully_dynamic_openrouter",
        "agentSystem": "multi_agent_with_dynamic_models",
        "dataStorage": "supabase_with_model_configs"
      },
      "metrics": {
        "buildStatus": "passing",
        "testCoverage": 85,
        "lintErrors": 0,
        "configurationsGenerated": 198
      }
    },
    "recommendations": [
      "üîß Fix 5 failing regression test(s)",
      "‚ö†Ô∏è Critical: Fix core functionality failures: dynamic-model-selection, scoring-system-integrity, report-generator-v7, researcher-functionality, positive-points-system, educational-insights-sync",
      "ü§ñ Fix model selection context matching for 5 test(s)"
    ],
    "manualValidation": {
      "success": true,
      "prUrl": "https://github.com/sindresorhus/ky/pull/700",
      "modelUsed": "google/gemini-2.0-flash",
      "output": "Mock validation completed successfully"
    }
  },
  "systemInfo": {
    "nodeVersion": "v23.11.0",
    "platform": "darwin",
    "cwd": "/Users/alpinro/Code Prjects/codequal/packages/agents",
    "gitInfo": {
      "commit": "9bb90a58f2831012b6c11d5e8e4e9cb686137bc0",
      "branch": "main",
      "author": "alpsla"
    }
  },
  "recommendations": [
    "ü§ñ Fix dynamic model selection: Check OpenRouter integration and model freshness scoring",
    "‚öñÔ∏è Fix scoring system: Ensure new scoring (5/3/1/0.5) is used instead of old (-20/-10/-5/-2)",
    "üìä Fix report generator v7: Verify all required sections are included and properly formatted",
    "‚ûï Implement positive points system: Add +5/+3/+1/+0.5 scoring for resolved issues",
    "üîç Run detailed analysis: npm run test:regression:debug",
    "üìù Check recent changes that might have broken functionality",
    "üß™ Test fixes locally before committing"
  ]
}