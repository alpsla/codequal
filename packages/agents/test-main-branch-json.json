{
  "issues": [
    {
      "title": "Potential Memory Leak",
      "severity": "high",
      "category": "performance",
      "file": "test/stream.ts",
      "line": 45,
      "impact": "Excessive memory usage during upload progress tracking.",
      "codeSnippet": "data.push(progress);",
      "fix": "Limit the number of stored progress updates.",
      "recommendation": "Implement a maximum limit for progress updates stored in the array."
    },
    {
      "title": "Uncaught Promise Rejections",
      "severity": "high",
      "category": "code-quality",
      "file": "test/main.ts",
      "line": 30,
      "impact": "Potential crashes if promises are rejected without handling.",
      "codeSnippet": "await ky.get(server.url, {json});",
      "fix": "Add error handling for promises.",
      "recommendation": "Use try-catch blocks or .catch() on promise chains."
    },
    {
      "title": "Unused Variables",
      "severity": "medium",
      "category": "code-quality",
      "file": "source/core/constants.ts",
      "line": 15,
      "impact": "Increased cognitive load for developers maintaining the code.",
      "codeSnippet": "const supportsRequestStreams = (() => { ... })();",
      "fix": "Remove or utilize the unused variable.",
      "recommendation": "Review the code to ensure all declared variables are used."
    },
    {
      "title": "Hardcoded URL",
      "severity": "medium",
      "category": "code-quality",
      "file": "test/helpers/index.ts",
      "line": 10,
      "impact": "Lack of flexibility when changing server endpoints.",
      "codeSnippet": "const serverUrl = 'https://example.com';",
      "fix": "Replace with a configurable environment variable.",
      "recommendation": "Utilize environment variables for configuration."
    },
    {
      "title": "Inconsistent Error Handling",
      "severity": "high",
      "category": "code-quality",
      "file": "test/hooks.ts",
      "line": 25,
      "impact": "Different error handling mechanisms can lead to unexpected behavior.",
      "codeSnippet": "throw new Error('custom error');",
      "fix": "Standardize error handling across the application.",
      "recommendation": "Use a centralized error handling strategy."
    },
    {
      "title": "Missing Type Definitions",
      "severity": "medium",
      "category": "code-quality",
      "file": "source/types/options.ts",
      "line": 5,
      "impact": "Potential type errors at runtime.",
      "codeSnippet": "export type KyOptions = { ... };",
      "fix": "Define types for all function parameters.",
      "recommendation": "Ensure all parameters are typed correctly."
    },
    {
      "title": "Deprecated Dependencies",
      "severity": "high",
      "category": "security",
      "file": "package.json",
      "line": 1,
      "impact": "Security vulnerabilities due to outdated packages.",
      "codeSnippet": "\"express\": \"^4.18.2\"",
      "fix": "Update to the latest version of dependencies.",
      "recommendation": "Regularly check and update dependencies."
    },
    {
      "title": "Potential XSS Vulnerability",
      "severity": "critical",
      "category": "security",
      "file": "test/browser.ts",
      "line": 50,
      "impact": "Risk of cross-site scripting attacks.",
      "codeSnippet": "response.write(req.body);",
      "fix": "Sanitize output before sending it to the client.",
      "recommendation": "Use libraries to escape user input."
    },
    {
      "title": "Improper Use of Async/Await",
      "severity": "medium",
      "category": "code-quality",
      "file": "test/retry.ts",
      "line": 15,
      "impact": "Possible unhandled promise rejections.",
      "codeSnippet": "await t.throwsAsync(...);",
      "fix": "Ensure proper async handling with try-catch.",
      "recommendation": "Refactor to handle async calls correctly."
    },
    {
      "title": "Lack of Test Coverage for Edge Cases",
      "severity": "medium",
      "category": "code-quality",
      "file": "test/fetch.ts",
      "line": 20,
      "impact": "Uncovered edge cases may lead to runtime errors.",
      "codeSnippet": "await ky(url);",
      "fix": "Add tests for edge cases.",
      "recommendation": "Increase test coverage to include edge cases."
    }
  ],
  "testCoverage": {
    "overall": 75,
    "testFileCount": 25,
    "sourceFileCount": 50
  },
  "dependencies": {
    "total": 45,
    "outdated": [
      {
        "name": "express",
        "current": "4.18.2",
        "latest": "4.19.0"
      }
    ]
  },
  "teamMetrics": {
    "contributors": 15
  },
  "documentation": {
    "score": 70
  }
}