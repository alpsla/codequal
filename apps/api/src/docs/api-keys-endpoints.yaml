paths:
  /api/keys:
    get:
      summary: List all API keys for the current user
      tags: [API Keys]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: API keys retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKeySummary'
        '401':
          description: Unauthorized

    post:
      summary: Create a new API key
      tags: [API Keys]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 50
                  example: "Production API Key"
                description:
                  type: string
                  maxLength: 200
                  example: "Used for production deployments"
                expires_at:
                  type: string
                  format: date-time
                  description: Optional expiration date
                scopes:
                  type: array
                  items:
                    type: string
                    enum: [read:analysis, write:analysis, read:reports, write:reports, read:user, write:user]
                  description: API key permissions
                rate_limit:
                  type: object
                  properties:
                    requests_per_minute:
                      type: integer
                      minimum: 1
                      maximum: 1000
                      default: 60
                    requests_per_day:
                      type: integer
                      minimum: 1
                      maximum: 100000
                      default: 10000
      responses:
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The actual API key (only shown once)
                    example: "ck_live_1234567890abcdef"
                  key_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: "Save this key securely - it won't be shown again"
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: API key limit reached

  /api/keys/{keyId}:
    get:
      summary: Get API key details
      tags: [API Keys]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: API key details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDetails'
        '401':
          description: Unauthorized
        '404':
          description: API key not found

    patch:
      summary: Update API key
      tags: [API Keys]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                is_active:
                  type: boolean
                scopes:
                  type: array
                  items:
                    type: string
                rate_limit:
                  type: object
                  properties:
                    requests_per_minute:
                      type: integer
                    requests_per_day:
                      type: integer
      responses:
        '200':
          description: API key updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDetails'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: API key not found

    delete:
      summary: Delete API key
      tags: [API Keys]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: API key deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: API key not found

  /api/keys/{keyId}/regenerate:
    post:
      summary: Regenerate API key
      tags: [API Keys]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: API key regenerated
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The new API key (only shown once)
                  message:
                    type: string
                    example: "Save this key securely - it won't be shown again"
        '401':
          description: Unauthorized
        '404':
          description: API key not found

  /api/keys/{keyId}/usage:
    get:
      summary: Get API key usage statistics
      tags: [API Keys]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: period
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Usage statistics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  key_id:
                    type: string
                    format: uuid
                  period:
                    type: string
                  usage:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        requests:
                          type: integer
                        successful_requests:
                          type: integer
                        failed_requests:
                          type: integer
                        rate_limited_requests:
                          type: integer
                  total_requests:
                    type: integer
                  total_successful:
                    type: integer
                  total_failed:
                    type: integer
        '401':
          description: Unauthorized
        '404':
          description: API key not found

tags:
  - name: API Keys
    description: API key management

components:
  schemas:
    ApiKeySummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        last_four:
          type: string
          description: Last 4 characters of the key
          example: "cdef"
        created_at:
          type: string
          format: date-time
        last_used_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        usage_this_month:
          type: integer

    ApiKeyDetails:
      allOf:
        - $ref: '#/components/schemas/ApiKeySummary'
        - type: object
          properties:
            scopes:
              type: array
              items:
                type: string
            rate_limit:
              type: object
              properties:
                requests_per_minute:
                  type: integer
                requests_per_day:
                  type: integer
            usage_stats:
              type: object
              properties:
                total_requests:
                  type: integer
                successful_requests:
                  type: integer
                failed_requests:
                  type: integer
                average_response_time_ms:
                  type: number
                  format: float
                last_30_days:
                  type: array
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                      requests:
                        type: integer