paths:
  /api/organizations:
    get:
      summary: List user's organizations
      tags: [Organizations]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Organizations retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized

    post:
      summary: Create a new organization
      tags: [Organizations]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 50
                  example: "My Team"
                description:
                  type: string
                  maxLength: 200
                billing_email:
                  type: string
                  format: email
                  description: Email for billing notifications
      responses:
        '201':
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid organization data
        '401':
          description: Unauthorized
        '402':
          description: Subscription required

  /api/organizations/{orgId}:
    get:
      summary: Get organization details
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Organization not found

    patch:
      summary: Update organization
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                billing_email:
                  type: string
                  format: email
                settings:
                  type: object
                  properties:
                    default_analysis_depth:
                      type: string
                      enum: [quick, standard, deep]
                    require_pr_approval:
                      type: boolean
                    allowed_repositories:
                      type: array
                      items:
                        type: string
      responses:
        '200':
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
        '400':
          description: Invalid data
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Organization not found

    delete:
      summary: Delete organization
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Organization deleted
        '401':
          description: Unauthorized
        '403':
          description: Only owner can delete organization
        '404':
          description: Organization not found

  /api/organizations/{orgId}/members:
    get:
      summary: List organization members
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Members retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationMember'
                  total:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions

    post:
      summary: Invite member to organization
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, role]
              properties:
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [admin, member, viewer]
                message:
                  type: string
                  description: Optional invitation message
      responses:
        '200':
          description: Invitation sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_id:
                    type: string
                    format: uuid
                  expires_at:
                    type: string
                    format: date-time
        '400':
          description: Invalid invitation data
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '409':
          description: User already invited or member

  /api/organizations/{orgId}/members/{userId}:
    patch:
      summary: Update member role
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [role]
              properties:
                role:
                  type: string
                  enum: [admin, member, viewer]
      responses:
        '200':
          description: Member role updated
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Member not found

    delete:
      summary: Remove member from organization
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Member removed
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Member not found

  /api/organizations/{orgId}/usage:
    get:
      summary: Get organization usage statistics
      tags: [Organizations]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: period
          schema:
            type: string
            enum: [day, week, month, year]
            default: month
      responses:
        '200':
          description: Usage statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: string
                  usage:
                    type: object
                    properties:
                      analyses_performed:
                        type: integer
                      reports_generated:
                        type: integer
                      api_calls:
                        type: integer
                      tokens_consumed:
                        type: integer
                      storage_used_mb:
                        type: number
                        format: float
                  by_member:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        analyses:
                          type: integer
                        api_calls:
                          type: integer
                  limits:
                    type: object
                    properties:
                      analyses_per_month:
                        type: integer
                      api_calls_per_month:
                        type: integer
                      storage_mb:
                        type: integer
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions

tags:
  - name: Organizations
    description: Organization and team management

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        owner_id:
          type: string
          format: uuid
        member_count:
          type: integer
        subscription_tier:
          type: string
          enum: [free, team, enterprise]
        user_role:
          type: string
          enum: [owner, admin, member, viewer]
          description: Current user's role in this organization

    OrganizationDetails:
      allOf:
        - $ref: '#/components/schemas/Organization'
        - type: object
          properties:
            billing_email:
              type: string
              format: email
            settings:
              type: object
              properties:
                default_analysis_depth:
                  type: string
                  enum: [quick, standard, deep]
                require_pr_approval:
                  type: boolean
                allowed_repositories:
                  type: array
                  items:
                    type: string
            subscription:
              type: object
              properties:
                tier:
                  type: string
                status:
                  type: string
                  enum: [active, past_due, canceled]
                current_period_end:
                  type: string
                  format: date-time
                seats_used:
                  type: integer
                seats_total:
                  type: integer

    OrganizationMember:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        full_name:
          type: string
          nullable: true
        role:
          type: string
          enum: [owner, admin, member, viewer]
        joined_at:
          type: string
          format: date-time
        last_active:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [active, invited, inactive]