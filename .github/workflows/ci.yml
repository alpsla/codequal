name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          # Check if yarn.lock exists, if not create it
          if [ ! -f "yarn.lock" ]; then
            echo "No yarn.lock found, creating one..."
            yarn install
          else
            yarn install --frozen-lockfile
          fi
      - name: Run ESLint
        run: yarn lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          # Check if yarn.lock exists, if not create it
          if [ ! -f "yarn.lock" ]; then
            echo "No yarn.lock found, creating one..."
            yarn install
          else
            yarn install --frozen-lockfile
          fi
      - name: Type check
        run: yarn tsc --noEmit

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          # Check if yarn.lock exists, if not create it
          if [ ! -f "yarn.lock" ]; then
            echo "No yarn.lock found, creating one..."
            yarn install
          else
            yarn install --frozen-lockfile
          fi
      - name: Run tests
        run: yarn test
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          # Check if yarn.lock exists, if not create it
          if [ ! -f "yarn.lock" ]; then
            echo "No yarn.lock found, creating one..."
            yarn install
          else
            yarn install --frozen-lockfile
          fi
      - name: Build
        run: yarn build
  
  dependency-scan:
    name: Scan Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          # Check if yarn.lock exists, if not create it
          if [ ! -f "yarn.lock" ]; then
            echo "No yarn.lock found, creating one..."
            yarn install
          else
            yarn install --frozen-lockfile
          fi
      
      # Load secrets from GitHub Actions secrets to environment variables
      - name: Set up environment variables
        run: |
          echo "SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}" >> $GITHUB_ENV
          echo "DEPENDENCY_SCAN_SEVERITY=high" >> $GITHUB_ENV
      
      # Only run if SNYK_TOKEN is available
      - name: Run dependency scan
        if: env.SNYK_TOKEN != ''
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}
        with:
          args: --severity-threshold=${{ env.DEPENDENCY_SCAN_SEVERITY }}